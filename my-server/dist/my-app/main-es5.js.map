{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/mock-projects.ts","webpack:///src/app/project-detail/project-detail.component.ts","webpack:///src/app/project-detail/project-detail.component.html","webpack:///src/app/project.service.ts","webpack:///src/app/projects/projects.component.ts","webpack:///src/app/projects/projects.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","projectService","projects","getProjects","subscribe","slice","MessageService","messages","message","push","providedIn","messageService","MessagesComponent","PROJECTS","name","ProjectDetailComponent","route","location","getProject","snapshot","paramMap","get","project","back","ProjectService","add","find","p","ProjectsComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProjectDetailComponent } from './project-detail/project-detail.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'projects', component: ProjectsComponent },\n  { path: 'detail/:id', component: ProjectDetailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'Joe Martin';\n}\n","<h1>{{title}}</h1>\n<nav>\n  <a routerLink=\"/dashboard\">Dashboard</a>\n  <a routerLink=\"/projects\">Projects</a>\n</nav>\n<router-outlet></router-outlet>\n<app-messages></app-messages>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ProjectDetailComponent } from './project-detail/project-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectsComponent,\n    ProjectDetailComponent,\n    MessagesComponent,\n    DashboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Project } from '../project';\nimport { ProjectService } from '../project.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.sass']\n})\nexport class DashboardComponent implements OnInit {\n  projects: Project[] = [];\n\n  constructor(private projectService: ProjectService) { }\n\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  getProjects(): void {\n    this.projectService.getProjects()\n      .subscribe(projects => this.projects = projects.slice(1,5));\n  }\n\n}\n","<h2>Top Projects</h2>\n<div class=\"projects-menu\">\n  <a *ngFor=\"let project of projects\"\n    routerLink=\"/detail/{{project.id}}\">\n    {{project.name}}\n  </a>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.sass']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n\n  <h2>Messages</h2>\n  <button class=\"clear\"\n    (click)=\"messageService.clear()\">Clear messages</button>\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\n\n</div>\n","import { Project } from './project';\r\n\r\nexport const PROJECTS: Project[] = [\r\n  { id: 11, name: 'Reusable Bag' },\r\n  { id: 12, name: 'Ear Savers' },\r\n  { id: 13, name: 'Wine Bottle Bag' },\r\n  { id: 14, name: 'Quilt' },\r\n  { id: 15, name: 'Llama Amigurumi' },\r\n  { id: 16, name: 'Baby Yoda Amigurumi' },\r\n  { id: 17, name: 'Two-tone Tee Shirt' },\r\n  { id: 18, name: 'Suit Jacket' },\r\n  { id: 19, name: 'Shorts' },\r\n  { id: 20, name: 'Wedding Dress' },\r\n]\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Project } from '../project'\nimport { ProjectService } from '../project.service';\n\n@Component({\n  selector: 'app-project-detail',\n  templateUrl: './project-detail.component.html',\n  styleUrls: ['./project-detail.component.sass']\n})\nexport class ProjectDetailComponent implements OnInit {\n  @Input() project: Project;\n\n  constructor(\n    private route: ActivatedRoute,\n    private projectService: ProjectService,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.getProject();\n  }\n\n  getProject(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.projectService.getProject(id)\n      .subscribe(project => this.project = project);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div *ngIf=\"project\">\n  <h2>{{project.name | uppercase}} Details</h2>\n  <div><span>id: </span>{{project.id}}</div>\n  <div>\n    <label>name:\n      <input [(ngModel)]=\"project.name\" type=\"text\" placeholder=\"name\">\n    </label>\n  </div>\n  <button (click)=\"goBack()\">Go Back</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Project } from './project';\nimport { PROJECTS } from './mock-projects';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  constructor(private messageService: MessageService) { }\n\n    getProjects(): Observable<Project[]> {\n      const projects = of(PROJECTS);\n      this.messageService.add('ProjectService: fetched projects');\n      return projects;\n    }\n\n    getProject(id: number): Observable<Project> {\n      const project = PROJECTS.find(p => p.id === id) as Project;\n      this.messageService.add(`ProjectService: fetched project id=${id}`);\n      return of(project);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Project } from '../project';\nimport { ProjectService } from '../project.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.sass']\n})\nexport class ProjectsComponent implements OnInit {\n  projects: Project[] = [];\n\n  constructor(private projectService: ProjectService) { }\n\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  getProjects(): void {\n    this.projectService.getProjects()\n      .subscribe(projects => this.projects = projects);\n  }\n\n}\n","<h2>Projects</h2>\r\n<ul class='projects'>\r\n  <li *ngFor=\"let project of projects\">\r\n    <a routerLink=\"/detail/{{project.id}}\">\r\n      <span class=\"badge\">{{project.id}}</span> {{project.name}}\r\n    </a>\r\n  </li>\r\n</ul>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}